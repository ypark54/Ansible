---
- name: Install Kubernetes on Ubuntu
  hosts: k8s_control_plane, k8s_worker
  become: yes  # Required to become root
  tasks:
    - name: Disable all swap spaces immediately
      command:
        cmd: swapoff -a
      changed_when: false  # This tells Ansible not to consider the task as a change
    - name: Ensure the overlay and br_netfilter modules are loaded
      copy:
        dest: /etc/modules-load.d/k8s.conf
        content: |
          overlay
          br_netfilter
      notify: Load modules

    - name: Set sysctl parameters for Kubernetes
      copy:
        dest: /etc/sysctl.d/k8s.conf
        content: |
          net.bridge.bridge-nf-call-iptables  = 1
          net.bridge.bridge-nf-call-ip6tables = 1
          net.ipv4.ip_forward                 = 1
      notify: Reload sysctl
    - name: Comment out swap entry in /etc/fstab
      lineinfile:
        path: /etc/fstab
        regexp: '^(.+\sswap\s.+)$'
        line: '#\1'
        backrefs: yes
    - name: Update apt cache and install required packages
      apt:
        update_cache: yes
        autoremove: true
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gpg
        state: present

    - name: Ensure /etc/apt/keyrings directory exists
      file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'

    - name: Download Kubernetes GPG key
      get_url:
        url: https://pkgs.k8s.io/core:/stable:/v1.29/deb/Release.key
        dest: "/tmp/kubernetes-apt-keyring.key"
        mode: '0644'

    - name: Import Kubernetes GPG key
      shell:
        cmd: "gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg /tmp/kubernetes-apt-keyring.key"
      args:
        creates: "/etc/apt/keyrings/kubernetes-apt-keyring.gpg"

    - name: Add Kubernetes APT repository
      apt_repository:
        repo: "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.29/deb/ /"
        state: present
        filename: kubernetes

    - name: Install Kubernetes components
      apt:
        update_cache: yes
        name:
          - kubelet
          - kubeadm
          - kubectl
        state: present

    - name: Hold Kubernetes components at their current version
      apt:
        name:
          - kubelet
          - kubeadm
          - kubectl
        state: fixed
  handlers:
    - name: Load modules
      command:
        cmd: modprobe {{ item }}
      loop:
        - overlay
        - br_netfilter
      # Ensuring idempotence: Run only if the module is not already loaded
      when: ansible_facts['kernel_modules'][item] is not defined

    - name: Reload sysctl
      command:
        cmd: sysctl --system
      ignore_errors: yes
